name: Upload Go test results

on:
  push:
    branches-ignore:
      - 'dependabot/**'
permissions:
  id-token: write
  contents: write

jobs:
  create_release:

    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch Tag
        run: |
          latestTag=$(git describe --abbrev=0 --tags)
          echo "RELEASE_VERSION=$latestTag" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
  release_assets:
    name: Release assets
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      # -------------Checkout----------------
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # -------------Setup----------------
      - name: Setup Go
        uses: actions/setup-go@v4
      - name: Install dependencies
        run: go get .

      # -------------Tests----------------
      - name: Run Tests
        run: go test -json > TestResults-${{ github.run_number }}.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: GoResults-${{ github.run_number }}
          path: TestResults-${{ github.run_number }}.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # -------------Releases----------------
      - name: Build Go binary
        run: go build -o goBrute-${{ matrix.config.os }}

      # -------------Upload----------------
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: goBrute-${{ matrix.config.os }}
          asset_path: ./goBrute-${{ matrix.config.os }}
          asset_content_type: application/octet-stream