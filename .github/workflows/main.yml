name: Upload Go test results

on:
  push:
    branches-ignore:
      - 'dependabot/**'
permissions:
  id-token: write
  contents: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go get .
      - name: Test with Go
        run: go test -json > TestResults-${{ matrix.go-version }}.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Set env

        run: |
          latestTag=$(git describe --abbrev=0 --tags)
          echo "RELEASE_VERSION=$latestTag" >> $GITHUB_ENV
      - name: Build Go
        run: |
          curtag=${GITHUB_REF_NAME}
          major_minor=$(echo "$curtag" | cut -d'.' -f1-2)
          patch=$(echo "$curtag" | cut -d'.' -f3)
          # avoid empty patch number
          [ -n "$patch" ] && ((patch--)) || patch=".x"
          prevtag="${major_minor}.${patch}"
          echo "" > body.log
          if git tag | grep $prevtag ; then
            git log -q ${curtag}...${prevtag} --pretty="- %s" -q --no-color >> body.log
          else
            git log --pretty="- %s" -q --no-color >> body.log
          fi
          line_count=$(cat body.log | wc -l)
          echo "curtag=$curtag" >> $GITHUB_OUTPUT
          echo "prevtag=$prevtag" >> $GITHUB_OUTPUT
          echo "line_count=$line_count" >> $GITHUB_OUTPUT
      - uses: ncipollo/release-action@v1
        if: startsWith(matrix.os, 'windows')
        with:
          name: goBrute
          tag: ${{ env.RELEASE_VERSION }}
          artifacts: "goBrute.exe"
          bodyFile: "body.log"
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ncipollo/release-action@v1
        if: startsWith(matrix.os, 'linux') || startsWith(matrix.goos, 'macos')
        with:
          name: goBrute
          tag: ${{ env.RELEASE_VERSION }}
          artifacts: "goBrute"
          bodyFile: "body.log"
          token: ${{ secrets.GITHUB_TOKEN }}
