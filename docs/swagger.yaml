basePath: /api/v1
definitions:
  models.Cred:
    properties:
      created_at:
        type: string
      description:
        type: string
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.Health:
    properties:
      id:
        type: string
      port:
        type: integer
      status:
        $ref: '#/definitions/models.ServiceStatus'
    type: object
  models.ServerError:
    properties:
      error:
        type: string
    type: object
  models.ServiceStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - ONLINE
    - PENDING
    - ERROR
    - ShuttingDown
  models.Slave:
    properties:
      created_at:
        type: string
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  title: Brute Forcer API
  version: "1.0"
paths:
  /creds:
    get:
      description: Get credentials from the database
      parameters:
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cred'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ServerError'
      summary: Get credentials
      tags:
      - Creds
    post:
      consumes:
      - application/json
      description: Add credentials to the database
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cred'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ServerError'
      summary: Add credentials
      tags:
      - Creds
  /health:
    get:
      description: API HealthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Health'
      summary: API Health Check
      tags:
      - Health Check
  /slaves:
    get:
      description: Get slaves from the database
      parameters:
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Slave'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get slaves
      tags:
      - Slaves
    post:
      consumes:
      - application/json
      description: Add slaves to the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Slave'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Add slaves
      tags:
      - Slaves
swagger: "2.0"
